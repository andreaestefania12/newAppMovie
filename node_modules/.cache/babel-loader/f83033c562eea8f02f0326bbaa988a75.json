{"ast":null,"code":"import _slicedToArray from\"E:/kommit/React/my-movie/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import userEvent from\"@testing-library/user-event\";import React,{useState,useEffect,useRef,useReducer}from\"react\";// Image\nimport searchIcon from'../../images/search-icon.svg';// Style\nimport{Wrapper,Content}from\"./SearchBar.styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchBar=function SearchBar(_ref){var setSearchTerm=_ref.setSearchTerm;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var initial=useRef(true);useEffect(function(){if(initial.current){initial.current=false;return;}var timer=setTimeout(function(){setSearchTerm(state);},500);return function(){return clearTimeout(timer);};},[setSearchTerm,state]);return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(\"img\",{src:searchIcon,alt:\"search-icon\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search Movie\",onChange:function onChange(event){return setState(event.currentTarget.value);},value:state})]})});};export default SearchBar;","map":{"version":3,"sources":["E:/kommit/React/my-movie/src/components/SearchBar/index.js"],"names":["userEvent","React","useState","useEffect","useRef","useReducer","searchIcon","Wrapper","Content","SearchBar","setSearchTerm","state","setState","initial","current","timer","setTimeout","clearTimeout","event","currentTarget","value"],"mappings":"8GAAA,MAAOA,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,CAA4CC,UAA5C,KAA6D,OAA7D,CAGA;AAEA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA;AAEA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,oBAAjC,C,wFAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAqB,IAAnBC,CAAAA,aAAmB,MAAnBA,aAAmB,CAEnC,cAAyBR,QAAQ,CAAC,EAAD,CAAjC,wCAAOS,KAAP,eAAaC,QAAb,eACA,GAAMC,CAAAA,OAAO,CAAGT,MAAM,CAAC,IAAD,CAAtB,CAEAD,SAAS,CAAC,UAAK,CACX,GAAGU,OAAO,CAACC,OAAX,CAAmB,CACfD,OAAO,CAACC,OAAR,CAAkB,KAAlB,CACA,OACH,CACD,GAAMC,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAK,CAC1BN,aAAa,CAACC,KAAD,CAAb,CACH,CAFuB,CAEtB,GAFsB,CAAxB,CAIA,MAAO,kBAAMM,CAAAA,YAAY,CAACF,KAAD,CAAlB,EAAP,CACH,CAVQ,CAUP,CAACL,aAAD,CAAeC,KAAf,CAVO,CAAT,CAYA,mBACI,KAAC,OAAD,wBACI,MAAC,OAAD,yBACI,YAAK,GAAG,CAAEL,UAAV,CAAsB,GAAG,CAAC,aAA1B,EADJ,cAEI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,cAFhB,CAGI,QAAQ,CAAE,kBAAAY,KAAK,QAAIN,CAAAA,QAAQ,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAZ,EAHnB,CAII,KAAK,CAAET,KAJX,EAFJ,GADJ,EADJ,CAaH,CA9BD,CAmCA,cAAeF,CAAAA,SAAf","sourcesContent":["import userEvent from \"@testing-library/user-event\";\r\nimport React, {useState, useEffect, useRef, useReducer} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Image\r\n\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n// Style\r\n\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\n\r\nconst SearchBar = ({setSearchTerm}) => {\r\n\r\n    const [state,setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(()=> {\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(()=> {\r\n            setSearchTerm(state);\r\n        },500)\r\n\r\n        return () => clearTimeout(timer);\r\n    },[setSearchTerm,state]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon'/>\r\n                <input\r\n                    type='text' \r\n                    placeholder='Search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n};\r\nSearchBar.propTypes = {\r\n    callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}