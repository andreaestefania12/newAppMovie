{"ast":null,"code":"var _jsxFileName = \"E:\\\\kommit\\\\React\\\\my-movie\\\\src\\\\components\\\\SearchBar\\\\index.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState, useEffect, useRef, useReducer} from \"react\";  hooks\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Image\n\nimport searchIcon from '../../images/search-icon.svg'; // Style\n\nimport { Wrapper, Content } from \"./SearchBar.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = _ref => {\n  _s();\n\n  let {\n    setSearchTerm\n  } = _ref;\n  const [state, setState] = useState('');\n  const initial = useRef(true);\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchIcon,\n        alt: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Movie\",\n        onChange: event => setState(event.currentTarget.value),\n        value: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"4a0yaNaJsI13bM4rPp+JAhdzH6s=\");\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["E:/kommit/React/my-movie/src/components/SearchBar/index.js"],"names":["React","Component","PropTypes","searchIcon","Wrapper","Content","SearchBar","setSearchTerm","state","setState","useState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","event","currentTarget","value","propTypes","callback","func"],"mappings":";;;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA,OAAOC,UAAP,MAAuB,8BAAvB,C,CAEA;;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,oBAAjC;;;AAGA,MAAMC,SAAS,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AAEnC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMC,OAAO,GAAGC,MAAM,CAAC,IAAD,CAAtB;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGF,OAAO,CAACG,OAAX,EAAmB;AACfH,MAAAA,OAAO,CAACG,OAAR,GAAkB,KAAlB;AACA;AACH;;AACD,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAK;AAC1BT,MAAAA,aAAa,CAACC,KAAD,CAAb;AACH,KAFuB,EAEtB,GAFsB,CAAxB;AAIA,WAAO,MAAMS,YAAY,CAACF,KAAD,CAAzB;AACH,GAVQ,EAUP,CAACR,aAAD,EAAeC,KAAf,CAVO,CAAT;AAYA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,OAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEL,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,cAFhB;AAGI,QAAA,QAAQ,EAAEe,KAAK,IAAIT,QAAQ,CAACS,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAH/B;AAII,QAAA,KAAK,EAAEZ;AAJX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9BD;;GAAMF,S;;KAAAA,S;AA+BNA,SAAS,CAACe,SAAV,GAAsB;AAClBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AADF,CAAtB;AAIA,eAAejB,SAAf","sourcesContent":["\r\n// import React, {useState, useEffect, useRef, useReducer} from \"react\";  hooks\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Image\r\n\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n// Style\r\n\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\n\r\nconst SearchBar = ({setSearchTerm}) => {\r\n\r\n    const [state,setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(()=> {\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(()=> {\r\n            setSearchTerm(state);\r\n        },500)\r\n\r\n        return () => clearTimeout(timer);\r\n    },[setSearchTerm,state]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon'/>\r\n                <input\r\n                    type='text' \r\n                    placeholder='Search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n};\r\nSearchBar.propTypes = {\r\n    callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}