{"ast":null,"code":"var _jsxFileName = \"E:\\\\kommit\\\\React\\\\my-movie\\\\src\\\\components\\\\MovieInfo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport PropTypes from 'prop-types'; // Components\n\nimport Thumb from '../Thumb';\nimport Rate from \"../Rate\"; // API\n\nimport API from '../../API'; // Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\"; // IMAGE\n\nimport NoImage from '../../images/no_image.jpg'; // Style\n\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\"; // Context\n\nimport { Context } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInfo = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [user] = useContext(Context);\n\n  const handleRating = async value => {\n    const rate = await API.rateMovie(user.sessionId, movie.id, value);\n    console.log(rate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    backdrop: movie.backdrop_path,\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Thumb, {\n        image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n        clickable: false,\n        alt: \"movie-thumb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PLOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-directors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"RATING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: movie.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"director\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"DIRECTOR\", movie.directors.legth > 1 ? 'S' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), movie.directors.map(director => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: director.name\n            }, director.credit_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Rate Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Rate, {\n            callback: handleRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieInfo, \"cIQXSn1fQGlDunUqhLB8HGDfGG8=\");\n\n_c = MovieInfo;\nMovieInfo.propTypes = {\n  movie: PropTypes.object\n};\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["E:/kommit/React/my-movie/src/components/MovieInfo/index.js"],"names":["React","useContext","PropTypes","Thumb","Rate","API","IMAGE_BASE_URL","POSTER_SIZE","NoImage","Wrapper","Content","Text","Context","MovieInfo","movie","user","handleRating","value","rate","rateMovie","sessionId","id","console","log","backdrop_path","poster_path","title","overview","vote_average","directors","legth","map","director","name","credit_id","propTypes","object"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// Components\r\n\r\nimport Thumb from '../Thumb';\r\nimport Rate from \"../Rate\";\r\n\r\n// API\r\nimport API from '../../API';\r\n// Config\r\n\r\nimport { IMAGE_BASE_URL,POSTER_SIZE } from \"../../config\";\r\n\r\n// IMAGE\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\n\r\n// Style\r\n\r\nimport { Wrapper,Content,Text } from \"./MovieInfo.styles\";\r\n\r\n// Context\r\nimport { Context } from \"../../context\";\r\n\r\nconst MovieInfo = ({movie}) => {\r\n\r\n    const [user] =useContext(Context);\r\n    const handleRating = async value => {\r\n        const rate = await API.rateMovie(user.sessionId,movie.id,value);\r\n        console.log(rate);\r\n    }\r\n\r\n    return (\r\n        <Wrapper backdrop={movie.backdrop_path}>\r\n            <Content>\r\n                <Thumb \r\n                    image= {\r\n                        movie.poster_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                        : NoImage\r\n                    }\r\n                    clickable={false}\r\n                    alt='movie-thumb' \r\n                />\r\n                <Text>\r\n                    <h1>{movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{movie.overview}</p>\r\n                    \r\n\r\n                    <div className=\"rating-directors\">\r\n                        <div>\r\n                            <h3>RATING</h3>\r\n                            <div className=\"score\">{movie.vote_average}</div>\r\n                        </div>\r\n                        <div className=\"director\">\r\n                            <h3>DIRECTOR{movie.directors.legth > 1 ? 'S' : ''}</h3>\r\n                            {movie.directors.map(director => (\r\n                                <p key={director.credit_id}>{director.name}</p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        user &&\r\n                    \r\n                    <div>\r\n                        <p>Rate Movie</p>\r\n                        <Rate callback={handleRating}/>\r\n                    </div>\r\n                    }\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object\r\n};\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}