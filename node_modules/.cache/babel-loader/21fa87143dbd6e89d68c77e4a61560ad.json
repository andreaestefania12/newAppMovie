{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\"; // API\n\nimport API from '../API'; // Helpers\n\nimport { isPersistedStated } from \"../helpers\";\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pags: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false); // console.log(searchTerm);\n\n  const fetchMovies = async function (page) {\n    let searchTerm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }; // Initial and search\n\n\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedStated('homeState');\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      }\n    }\n\n    ;\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]); // Load More\n\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state]); // Write to session storage\n\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem('homeState');\n  }, [searchTerm, state]);\n  return {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  };\n};\n\n_s(useHomeFetch, \"dBJ7X+B7mKTD/wf7wWZDSOZt9OY=\");","map":{"version":3,"sources":["E:/kommit/React/my-movie/src/hooks/useHomeFetch.js"],"names":["useState","useEffect","useRef","API","isPersistedStated","initialState","page","results","total_pags","total_results","useHomeFetch","searchTerm","setSearchTerm","state","setState","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","fetchMovies","movies","prev","sessionState","sessionStorage","setItem"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,EAA4BC,MAA5B,QAA0C,OAA1C,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,UAAU,EAAE,CAHK;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAQA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAmBd,QAAQ,EAAjC;AACA,QAAM,CAACe,OAAD,EAASC,UAAT,IAAuBhB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACiB,KAAD,EAAOC,QAAP,IAAmBlB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD,CAL8B,CAO9B;;AACA,QAAMqB,WAAW,GAAG,gBAAOf,IAAP,EAAiC;AAAA,QAApBK,UAAoB,uEAAP,EAAO;;AACjD,QAAI;AACAO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,MAAM,GAAG,MAAMnB,GAAG,CAACkB,WAAJ,CAAgBV,UAAhB,EAA2BL,IAA3B,CAArB;AAEAQ,MAAAA,QAAQ,CAACS,IAAI,KAAK,EACd,GAAGD,MADW;AAEdf,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGiB,IAAI,CAAChB,OAAT,EAAiB,GAAGe,MAAM,CAACf,OAA3B,CAAX,GAAiD,CAAC,GAAGe,MAAM,CAACf,OAAX;AAHvC,OAAL,CAAL,CAAR;AAKH,KAVD,CAUE,OAAOU,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAfD,CAR8B,CAyB9B;;;AACAf,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACU,UAAJ,EAAe;AACX,YAAMa,YAAY,GAAGpB,iBAAiB,CAAC,WAAD,CAAtC;;AACA,UAAGoB,YAAH,EAAgB;AACZV,QAAAA,QAAQ,CAACU,YAAD,CAAR;AACA;AACH;AACJ;;AAAA;AACDV,IAAAA,QAAQ,CAACT,YAAD,CAAR;AACAgB,IAAAA,WAAW,CAAC,CAAD,EAAGV,UAAH,CAAX;AACH,GAVQ,EAUP,CAACA,UAAD,CAVO,CAAT,CA1B8B,CAsC9B;;AACAV,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACkB,aAAJ,EAAmB;AACnBE,IAAAA,WAAW,CAACR,KAAK,CAACP,IAAN,GAAa,CAAd,EAAgBK,UAAhB,CAAX;AACAS,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEH,GALQ,EAKP,CAACD,aAAD,EAAeR,UAAf,EAA0BE,KAA1B,CALO,CAAT,CAvC8B,CA8C9B;;AACAZ,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACU,UAAJ,EAAgBc,cAAc,CAACC,OAAf,CAAuB,WAAvB;AACnB,GAFQ,EAEP,CAACf,UAAD,EAAYE,KAAZ,CAFO,CAAT;AAIA,SAAO;AAACA,IAAAA,KAAD;AAAOE,IAAAA,OAAP;AAAeE,IAAAA,KAAf;AAAqBN,IAAAA,UAArB;AAAgCC,IAAAA,aAAhC;AAA+CQ,IAAAA;AAA/C,GAAP;AAEH,CArDM;;GAAMV,Y","sourcesContent":["import { useState,useEffect,useRef } from \"react\";\r\n\r\n// API\r\nimport API from '../API';\r\n\r\n// Helpers\r\nimport { isPersistedStated } from \"../helpers\";\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pags: 0,\r\n    total_results: 0\r\n};\r\n\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state,setState] = useState();\r\n    const [loading,setLoading] = useState(false);\r\n    const [error,setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    // console.log(searchTerm);\r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n        try {\r\n            setError(false);\r\n            setLoading(true);\r\n            const movies = await API.fetchMovies(searchTerm,page);\r\n\r\n            setState(prev => ({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results,...movies.results] : [...movies.results]\r\n            }));\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    // Initial and search\r\n    useEffect(()=> {\r\n        if(!searchTerm){\r\n            const sessionState = isPersistedStated('homeState');\r\n            if(sessionState){\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        };\r\n        setState(initialState);\r\n        fetchMovies(1,searchTerm)\r\n    },[searchTerm]);\r\n\r\n    // Load More\r\n    useEffect(()=> {\r\n        if(!isLoadingMore) return;\r\n        fetchMovies(state.page + 1,searchTerm);\r\n        setIsLoadingMore(false);\r\n\r\n    },[isLoadingMore,searchTerm,state]);\r\n\r\n    // Write to session storage\r\n    useEffect(()=> {\r\n        if(!searchTerm) sessionStorage.setItem('homeState');\r\n    },[searchTerm,state]);\r\n\r\n    return {state,loading,error,searchTerm,setSearchTerm, setIsLoadingMore};\r\n\r\n};"]},"metadata":{},"sourceType":"module"}